#!/usr/bin/env python
# coding=utf-8

import numpy as np
import pylab as pl

def create_qsample():
    return np.random.rand() * 4

def create_p(x):
    return 0.3 * np.exp(-(x - 0.3) ** 2) + 0.7 * np.exp(-(x - 2.) ** 2 / 0.5)

def create_q(x):
    return 4.0

def importance_sampling(n):
    sample = np.zeros(n, dtype = float)
    w = np.zeros(n, dtype = float)
    for i in range(n):
        sample[i] = create_qsample()
        w[i] = create_p(sample[i]) / create_q(sample[i])
    return sample, w

if __name__ == '__main__':
    x = np.arange(-4, 4, 0.1)
    realdata = create_p(x)
    pl.plot(x, realdata, 'k', lw = 6)
    samples, w = importance_sampling(1500)
    pl.hist(samples, 15, normed = 1, fc = 'k')
    pl.xlabel('x', fontsize = 24)
    pl.ylabel('p(x)', fontsize = 24)
    pl.axis([-0.5, 4.5, 0, 1])
    pl.show()

